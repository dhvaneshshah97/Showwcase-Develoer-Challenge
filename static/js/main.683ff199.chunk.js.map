{"version":3,"sources":["Layout.tsx","Homescreen.tsx","Modal_Form.tsx","Card.tsx","Mainscreen.tsx","Routes.tsx","index.tsx"],"names":["Layout","title","description","className","children","style","height","src","width","Homescreen","getName","history","useState","name","setName","disable","setDisable","handleChange","e","target","value","useEffect","localStorage","getItem","handleSubmit","preventDefault","setItem","push","handleClick","removeItem","marginBottom","onSubmit","readOnly","onChange","required","disabled","cursor","onClick","to","Modal_Form","toggleModal","getEducationDetails","universities","setUniversities","degree","fos","start","end","grade","values","setValues","fetchUniversities","a","fetch","rawResponse","json","response","console","log","typeofdegree","color","Autocomplete","id","options","getOptionLabel","u","renderInput","params","TextField","label","variant","event","newValue","freeSolo","map","d","i","key","type","max","min","step","rows","Card","details","deleteEducation","handleDelete","Mainscreen","user","isOpen","setIsOpen","setDetails","change","setChange","items","JSON","parse","detail","newArray","undefined","window","unshift","stringify","goBack","addNewEducationButton","ed","smooth","p","index","splice","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","fontWeight","Routes","basename","process","exact","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.683ff199.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Props {\r\n    title: string;\r\n    description: string;\r\n    children: React.ReactNode;\r\n    className: string;\r\n}\r\n\r\nconst Layout: React.FC<Props> = ({ title = \"Title\", description = \"Description\", className, children }) => {\r\n    const url = \"https://static.wixstatic.com/media/553d6a_6c7304f930724f46a47a88893ae7bb59~mv2.png/v1/fill/w_116,h_119,al_c,q_85,usm_0.66_1.00_0.01/Logo%20(20).webp\"\r\n    \r\n    return (\r\n        <div style={{height:'100vh'}}>\r\n            <div className=\"jumbotron\">\r\n                <h2><img src={url} style={{width:35,height:35}}/> {title}</h2>\r\n                <p className=\"lead\">{description}</p>\r\n            </div>\r\n            <div className={className}>{children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Layout from './Layout';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\n\r\n// Props for the Component\r\ninterface Props extends RouteComponentProps<any> {\r\n    getName: () => void;\r\n}\r\n\r\nconst Homescreen: React.FC<Props> = ({ getName, history }) => {\r\n    // state variables\r\n    const [name, setName] = useState('');\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    // setting state variable for conditional rendering\r\n    const buttonDisable = () => {\r\n        if (localStorage.getItem('name')) {\r\n            setDisable(true);\r\n        } else {\r\n            setDisable(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        buttonDisable();\r\n    }, [])\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        localStorage.setItem('name', name);\r\n        getName();\r\n        history.push(\"/mainscreen\");\r\n        setDisable(true);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        localStorage.removeItem('name');\r\n        localStorage.removeItem('education');\r\n        setDisable(false);\r\n    }\r\n\r\n    const showForm = () => {\r\n        return (\r\n            <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-muted\">Type your name and click 'enter' below to begin!</label>\r\n                        {disable ? <input className=\"form-control\" readOnly /> : <input className=\"form-control\" value={name} onChange={handleChange} required />}\r\n                    </div>\r\n                    {disable ? <button className=\"btn btn-outline-primary mb-3\" disabled style={{ cursor: 'not-allowed' }}>Enter</button> : <button className=\"btn btn-outline-primary\">Enter</button>}\r\n                </form>\r\n                {disable && \r\n                <div className=\"row\">\r\n                    <div className=\"col\"><button className=\"btn btn-outline-success\" onClick={handleClick}>Not {`${localStorage.getItem('name')} ?`}</button></div>\r\n                    <div className=\"col text-right\">\r\n                        <Link to=\"/mainscreen\" className=\"text-success\">Go to mainscreen <i className=\"fas fa-chevron-right\"></i></Link>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Showwcase\" className=\"container-fluid col-md-6 offset-md-3\" description=\"All-in-one platform built for Tech Workers\">\r\n            <h3 style={{ marginBottom: '50px' }}>Hi there! Welcome to your education showcase.</h3>\r\n            {showForm()}\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Homescreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\ninterface Prop {\r\n    getEducationDetails: (val: Object) => void\r\n    toggleModal: () => void;\r\n}\r\n\r\nconst Modal_Form: React.FC<Prop> = ({ toggleModal, getEducationDetails }) => {\r\n    // state varibales\r\n    const [universities, setUniversities] = useState([]);\r\n    const [name, setName] = useState<any>({})\r\n    const [values, setValues] = useState<any>({\r\n        degree: '',\r\n        fos: '',\r\n        start: '',\r\n        end: '',\r\n        grade: '',\r\n        description: '',\r\n    });\r\n\r\n    // destructuring state variables\r\n    const { degree, fos, start, end, grade, description } = values;\r\n\r\n    // fetch all universities from API when initial loading of Component\r\n    const fetchUniversities = async () => {\r\n        try {\r\n            const rawResponse = await fetch('http://universities.hipolabs.com/search');\r\n            const response = await rawResponse.json();\r\n            setUniversities(response)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // option values for degree drop-down\r\n    const typeofdegree = [\"High School\", \"Associate\", \"Bachelor\", \"Master\", \"MBA\", \"Juris Doctor (J.D.)\", \"Doctor of Medicine (M.D.)\", \"Doctor of Philosophy (Ph.D.)\"]\r\n\r\n    useEffect(() => {\r\n        fetchUniversities();\r\n    }, []);\r\n\r\n    // handleChange method for all form elements \r\n    const handleChange = (e: any) => {\r\n        const { name, value } = e.target;\r\n        setValues({ ...values, [name]: value });\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        values['name'] = name['name'];\r\n        values['uniqueKey'] = values['name']+values['degree']\r\n        getEducationDetails(values);\r\n        console.log(values);\r\n        toggleModal();\r\n    }\r\n\r\n    // Modal form\r\n    const newModalForm = () => (\r\n        <form className=\"mb-3\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name of School <span style={{color:'red'}}>*</span></label>\r\n                <Autocomplete id=\"School\" options={universities} getOptionLabel={(u) => u['name']} renderInput={(params) => <TextField {...params} label=\"School\" variant=\"outlined\" />} onChange={(event, newValue) => { setName(newValue) }}  freeSolo />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Degree <span style={{color:'red'}}>*</span></label>\r\n                <select className=\"form-control\" name=\"degree\" onChange={handleChange} value={degree} required>\r\n                    <option value=\"\">Please Select</option>\r\n                    {typeofdegree.map((d,i) => (\r\n                        <option key={i} value={d}>{d}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Field of Study <span style={{color:'red'}}>*</span></label>\r\n                <input type=\"text\" className=\"form-control\" name=\"fos\" value={fos} onChange={handleChange} required />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                    <label className=\"text-muted\">Start year <span style={{color:'red'}}>*</span></label>\r\n                    <input type=\"date\" className=\"form-control\" name=\"start\" value={start} onChange={handleChange} required/>\r\n                </div>\r\n                <div className=\"form-group col\">\r\n                    <label className=\"text-muted\">End year (expected) <span style={{color:'red'}}>*</span></label>\r\n                    <input type=\"date\" className=\"form-control\" name=\"end\" value={end} onChange={handleChange} required />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Grade (on scale 4.0) <span style={{color:'red'}}>*</span></label>\r\n                <input type=\"number\" className=\"form-control\" name=\"grade\" value={grade} onChange={handleChange} max=\"4.0\" min=\"0.0\" step=\"0.01\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description (e.g. - your experience with your University/Field of Study)</label>\r\n                <textarea className=\"form-control\" name=\"description\" value={description} onChange={handleChange} rows={3} />\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {newModalForm()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal_Form;\r\n\r\n","import React from 'react';\r\n\r\ninterface Prop {\r\n    details: any;\r\n    deleteEducation: (d:any, i:any) => void;\r\n}\r\n\r\nconst Card: React.FC<Prop> = ({ details, deleteEducation }) => {\r\n    \r\n    const handleDelete = (d:any,i:any) => {\r\n        deleteEducation(d,i)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {details.map((d: any, i: any) => (\r\n                <div className=\"card mb-5\" id={d['degree']} key={i}>\r\n                    <h4 className=\"card-header g-font\">Education Info</h4>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item g-font\">Name of University: {d['name']}</li>\r\n                        <li className=\"list-group-item g-font\">Degree: {d['degree']}</li>\r\n                        <li className=\"list-group-item g-font\">Field of Study: {d['fos']}</li>\r\n                        <li className=\"list-group-item g-font\">Duration: {d['start']} to {d['end']} (in YYYY-MM-DD) </li>\r\n                        <li className=\"list-group-item g-font\">Grade: {d['grade']}/4 </li>\r\n                        <li className=\"list-group-item g-font\">Description: {d['description']} </li>\r\n                        <li className=\"list-group-item\"><button className=\"btn btn-danger g-font\" onClick={() => handleDelete(d,i)}>Delete My Education</button></li>\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useEffect, useState } from 'react'\r\nimport Layout from './Layout';\r\nimport Modal from 'react-modal';\r\nimport './styles.css';\r\nimport Modal_Form from './Modal_Form';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport Card from './Card';\r\n\r\ninterface Props {\r\n    user: string;\r\n}\r\n\r\nconst Mainscreen: React.FC<Props> = ({ user }) => {\r\n    // state variables\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [details, setDetails] = useState<any>([]);\r\n    const [change, setChange] = useState(false);\r\n\r\n    useEffect(() => {\r\n        items();\r\n    }, [change])\r\n\r\n    const items = () => {\r\n        if (localStorage.getItem('education')) {\r\n            setDetails(JSON.parse(localStorage.getItem('education') || ''))\r\n        }\r\n    }\r\n\r\n    // getting object containing education details from Modal_Form component via callback\r\n    const getEducationDetails = async (detail: object) => {\r\n        var newArray = []\r\n        if (typeof (window) !== undefined) {\r\n            if (localStorage.getItem('education')) {\r\n                newArray = JSON.parse(localStorage.getItem('education') || '');\r\n            }\r\n        }\r\n        newArray.unshift(detail);\r\n        localStorage.setItem('education', JSON.stringify(newArray));\r\n        setChange(!change);\r\n    }\r\n\r\n    const toggleModal = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    // deletes education detail card \r\n    const deleteEducation = (p: any, index: any) => {\r\n        details.map((e: any, i: any) => {\r\n            if (e['uniqueKey'] === p['uniqueKey']) {\r\n                details.splice(index, 1)\r\n            }\r\n        });\r\n        // setting localstorage again after deleting particular education object\r\n        localStorage.setItem('education', JSON.stringify(details))\r\n\r\n        // refresh component\r\n        setChange(!change);\r\n    }\r\n\r\n    // side panel of bookmarked education links\r\n    const sidePanel = () => (\r\n        <div className=\"card mb-5\">\r\n            <h4 className=\"card-header g-font\">Jump from here</h4>\r\n            <ul className=\"list-group\">\r\n                {details.map((ed: any, i: any) => (\r\n                    <li className=\"list-group-item\" key={i}>\r\n                        <Link className=\"g-font\" smooth key={i} to={`/mainscreen/#${ed['degree']}`}>{`${ed['degree']} @ ${ed['name']}`}</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    // back to homescreen link\r\n    const goBack = (\r\n        <div className=\"col-sm-12 mb-3\">\r\n            <Link to=\"/\" className=\"text-success\"><i className=\"fas fa-chevron-left\"></i> Back to Homescreen</Link>\r\n        </div>\r\n    );\r\n\r\n    // button to add new education info\r\n    const addNewEducationButton = (\r\n        <div className=\"col-sm-12 text-center mb-5\">\r\n            <button className=\"btn btn-primary g-font\" onClick={toggleModal}>Add new education</button>\r\n        </div>\r\n    );\r\n\r\n    // this is what going to be rendered on screen\r\n    return (\r\n        <Layout className=\"container-fluid\" title={`Welcome back, ${user}`} description=\"Let's add some education details\" >\r\n            <div className=\"row\">\r\n                {goBack}\r\n                {addNewEducationButton}\r\n                <div className=\"col-sm-12 col-md-3\">\r\n                    {localStorage.getItem('education') && sidePanel()}\r\n                </div>\r\n                <div className=\"col-sm-12 col-md-6 offset-md-1\">\r\n                    <Card details={details} deleteEducation={deleteEducation} />\r\n                </div>\r\n                <Modal isOpen={isOpen} onRequestClose={toggleModal} contentLabel=\"My modal\" className=\"mymodal\" overlayClassName=\"myoverlay\" closeTimeoutMS={500}>\r\n                    <div className=\"text-center\" style={{ fontWeight: 'bold' }}>Education Form</div>\r\n                    <Modal_Form toggleModal={toggleModal} getEducationDetails={getEducationDetails} />\r\n                </Modal>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Mainscreen;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Homescreen from './Homescreen';\r\nimport Mainscreen from './Mainscreen';\r\n\r\nconst Routes:React.FC = () => {\r\n    const [name, setName] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        getName();\r\n    }, [])\r\n\r\n    // getting name from homescreen and sending it to Mainscreen\r\n    const getName = () => {\r\n        setName(localStorage.getItem('name') || '')\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={(props) => <Homescreen getName={getName} {...props} />} />\r\n                <Route exact path=\"/mainscreen\" render={() => <Mainscreen user={name} />} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routes from './Routes';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Routes />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}